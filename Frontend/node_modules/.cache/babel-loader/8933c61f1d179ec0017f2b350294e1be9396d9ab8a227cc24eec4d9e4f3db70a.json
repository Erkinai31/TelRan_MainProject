{"ast":null,"code":"var _JSON$parse;\nlet defaultState = {\n  basket: (_JSON$parse = JSON.parse(localStorage.getItem(\"goods\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [],\n  totalSum: 0\n};\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\nexport const basketReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_ELEMS:\n      let newGood = state.basket.find(elem => elem.id == action.payload.id);\n      let totalSum = state.totalSum.reduce((sum, elem) => elem.discont_price == action.payload.dis);\n      if (newGood) {\n        return {\n          ...state,\n          basket: state.basket.map(elem => {\n            if (elem.id == newGood.id) {\n              elem.count = elem.count + 1;\n            }\n            return elem;\n          })\n        };\n      } else {\n        return {\n          ...state,\n          basket: [...state.basket, {\n            ...action.payload,\n            count: 1\n          }]\n        };\n      }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map(elem => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        })\n      };\n    case REM_COUNT:\n      let cart = state.basket.find(elem => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter(elem => elem.id != action.payload)\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map(elem => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          })\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter(elem => elem.id != action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport const addElemsAction = payload => ({\n  type: ADD_ELEMS,\n  payload\n});\nexport const addCountAction = payload => ({\n  type: ADD_COUNT,\n  payload\n});\nexport const remCountAction = payload => ({\n  type: REM_COUNT,\n  payload\n});\nexport const remElemAction = payload => ({\n  type: REM_ELEM,\n  payload\n});","map":{"version":3,"names":["defaultState","basket","JSON","parse","localStorage","getItem","totalSum","ADD_ELEMS","ADD_COUNT","REM_COUNT","REM_ELEM","basketReducer","state","action","type","newGood","find","elem","id","payload","reduce","sum","discont_price","dis","map","count","cart","filter","addElemsAction","addCountAction","remCountAction","remElemAction"],"sources":["/Users/azadatca/Desktop/Tel-RanProject/myapp/src/store/basketReducer.js"],"sourcesContent":["let defaultState = {\n  basket: JSON.parse(localStorage.getItem(\"goods\")) ?? [],\n  totalSum:0\n};\n\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\n\nexport const basketReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_ELEMS:\n      let newGood = state.basket.find((elem) => elem.id == action.payload.id);\n      let totalSum = state.totalSum.reduce((sum,elem)=>elem.discont_price==action.payload.dis)\n      if (newGood) {\n        return {\n          ...state,\n          basket: state.basket.map((elem) => {\n            if (elem.id == newGood.id) {\n              elem.count = elem.count + 1;\n            }\n            return elem;\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          basket: [\n            ...state.basket,\n            {\n              ...action.payload,\n              count: 1,\n            },\n          ],\n        };\n      }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map((elem) => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        }),\n      };\n    case REM_COUNT:\n      let cart = state.basket.find((elem) => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter((elem) => elem.id != action.payload),\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map((elem) => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          }),\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter((elem) => elem.id != action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addElemsAction = (payload) => ({ type: ADD_ELEMS, payload });\nexport const addCountAction = (payload) => ({ type: ADD_COUNT, payload });\nexport const remCountAction = (payload) => ({ type: REM_COUNT, payload });\nexport const remElemAction = (payload) => ({ type: REM_ELEM, payload });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}