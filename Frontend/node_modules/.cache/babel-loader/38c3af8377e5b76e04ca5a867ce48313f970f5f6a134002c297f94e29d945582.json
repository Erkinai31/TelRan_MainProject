{"ast":null,"code":"var _JSON$parse;\nlet defaultState = {\n  basket: (_JSON$parse = JSON.parse(localStorage.getItem('goods'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []\n};\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\nexport const basketReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_ELEMS:\n      let newGood = state.basket.find(elem => elem.id == action.payload);\n      if (newGood) {\n        return {\n          ...state,\n          basket: state.basket.map(elem => {\n            if (elem.id == newGood.id) {\n              elem.count = elem.count + 1;\n            }\n            return elem;\n          })\n        };\n      } else {\n        return {\n          ...state,\n          basket: [...state.basket, {\n            id: Math.max(...state.basket.map(elem => elem.id)) + 1,\n            count: 1\n          }]\n        };\n      }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map(elem => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        })\n      };\n    case REM_COUNT:\n      let cart = state.basket.find(elem => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter(elem => elem.id != action.payload)\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map(elem => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          })\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter(elem => elem.id != action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport const addElemsAction = payload => ({\n  type: ADD_ELEMS,\n  payload\n});\nexport const addCountAction = payload => ({\n  type: ADD_COUNT,\n  payload\n});\nexport const remCountAction = payload => ({\n  type: REM_COUNT,\n  payload\n});\nexport const remElemAction = payload => ({\n  type: REM_ELEM,\n  payload\n});","map":{"version":3,"names":["defaultState","basket","JSON","parse","localStorage","getItem","ADD_ELEMS","ADD_COUNT","REM_COUNT","REM_ELEM","basketReducer","state","action","type","newGood","find","elem","id","payload","map","count","Math","max","cart","filter","addElemsAction","addCountAction","remCountAction","remElemAction"],"sources":["/Users/azadatca/Desktop/Tel-RanProject/myapp/src/store/basketReducer.js"],"sourcesContent":["let defaultState = {\n  basket: JSON.parse(localStorage.getItem('goods'))??[],\n};\n\n\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\n\n\nexport const basketReducer = (state = defaultState, action) => {\n  switch (action.type) {\n      case ADD_ELEMS:\n        let newGood = state.basket.find(elem => elem.id == action.payload)\n        if (newGood) {\n            return {...state, basket: state.basket.map(elem => {\n                if (elem.id == newGood.id){\n                    elem.count = elem.count + 1\n                }\n                return elem\n            })}\n        } else {\n            return {...state, basket: [...state.basket, \n                {\n                    id: Math.max(...state.basket.map(elem => elem.id)) + 1,\n                    count: 1\n                }]}\n        }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map((elem) => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        }),\n      };\n    case REM_COUNT:\n      let cart = state.basket.find((elem) => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter((elem) => elem.id != action.payload),\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map((elem) => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          }),\n        };\n      }  \n      case REM_ELEM:\n        return {...state, basket: state.basket.filter((elem) => elem.id != action.payload)}\n    default:\n      return state;\n  }\n};\n\nexport const addElemsAction = (payload) => ({ type: ADD_ELEMS, payload });\nexport const addCountAction = (payload) => ({type: ADD_COUNT, payload}) \nexport const remCountAction = (payload) => ({type: REM_COUNT, payload}) \nexport const remElemAction = (payload) => ({type: REM_ELEM, payload})\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}