{"ast":null,"code":"let defaultState = {\n  basket: {\n    items: [],\n    totalSum: 0\n  }\n};\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\nexport const basketReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_ELEMS:\n      let newGood = state.basket.items.find(elem => elem.id == action.payload.id);\n      if (newGood) {\n        return {\n          ...state,\n          basket: state.basket.items.map(elem => {\n            if (elem.id == newGood.id) {\n              elem.count = elem.count + 1;\n            }\n            return elem;\n          })\n        };\n      } else {\n        return {\n          ...state,\n          basket: [...state.basket.items, {\n            ...action.payload,\n            count: 1\n          }]\n        };\n      }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.items.map(elem => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        })\n      };\n    case REM_COUNT:\n      let cart = state.basket.items.find(elem => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.items.filter(elem => elem.id != action.payload)\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.items.map(elem => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          })\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter(elem => elem.id != action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport const addElemsAction = payload => ({\n  type: ADD_ELEMS,\n  payload\n});\nexport const addCountAction = payload => ({\n  type: ADD_COUNT,\n  payload\n});\nexport const remCountAction = payload => ({\n  type: REM_COUNT,\n  payload\n});\nexport const remElemAction = payload => ({\n  type: REM_ELEM,\n  payload\n});","map":{"version":3,"names":["defaultState","basket","items","totalSum","ADD_ELEMS","ADD_COUNT","REM_COUNT","REM_ELEM","basketReducer","state","action","type","newGood","find","elem","id","payload","map","count","cart","filter","addElemsAction","addCountAction","remCountAction","remElemAction"],"sources":["/Users/azadatca/Desktop/Tel-RanProject/myapp/src/store/basketReducer.js"],"sourcesContent":["let defaultState = {\n  basket: {\n   items:[],\n   totalSum:0\n  }\n  \n};\n\nconst ADD_ELEMS = \"ADD_ELEMS\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\n\n\nexport const basketReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_ELEMS:\n      let newGood = state.basket.items.find((elem) => elem.id == action.payload.id);\n    if (newGood) {\n        return {\n          ...state,\n          basket: state.basket.items.map((elem) => {\n            if (elem.id == newGood.id) {\n              elem.count = elem.count + 1;\n            }\n            return elem;\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          basket: [\n            ...state.basket.items,\n            {\n              ...action.payload,\n              count: 1,\n            },\n          ],\n        };\n      }\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.items.map((elem) => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        }),\n      };\n    case REM_COUNT:\n      let cart = state.basket.items.find((elem) => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.items.filter((elem) => elem.id != action.payload),\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.items.map((elem) => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          }),\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter((elem) => elem.id != action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addElemsAction = (payload) => ({ type: ADD_ELEMS, payload });\nexport const addCountAction = (payload) => ({ type: ADD_COUNT, payload });\nexport const remCountAction = (payload) => ({ type: REM_COUNT, payload });\nexport const remElemAction = (payload) => ({ type: REM_ELEM, payload });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}