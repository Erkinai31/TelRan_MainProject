{"ast":null,"code":"let defaultState = {\n  basket: []\n};\nconst ADD_PRODUCT = \"ADD_PRODUCT\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\nexport const basketReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_PRODUCT:\n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map(elem => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        })\n      };\n    case REM_COUNT:\n      let cart = state.basket.find(elem => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter(elem => elem.id != action.payload)\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map(elem => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          })\n        };\n      }\n    case REM_ELEM:\n      return {\n        ...state,\n        basket: state.basket.filter(elem => elem.id != action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport const addProductAction = payload => ({\n  type: ADD_PRODUCT,\n  payload\n});\nexport const addCountAction = payload => ({\n  type: ADD_COUNT,\n  payload\n});\nexport const remCountAction = payload => ({\n  type: REM_COUNT,\n  payload\n});\nexport const remElemAction = payload => ({\n  type: REM_ELEM,\n  payload\n});","map":{"version":3,"names":["defaultState","basket","ADD_PRODUCT","ADD_COUNT","REM_COUNT","REM_ELEM","basketReducer","state","action","type","map","elem","id","payload","count","cart","find","filter","addProductAction","addCountAction","remCountAction","remElemAction"],"sources":["/Users/azadatca/Desktop/Tel-RanProject/myapp/src/store/basketReducer.js"],"sourcesContent":["let defaultState = {\n  basket: [],\n};\n\nconst ADD_PRODUCT = \"ADD_PRODUCT\";\nconst ADD_COUNT = \"ADD_COUNT\";\nconst REM_COUNT = \"REM_COUNT\";\nconst REM_ELEM = \"REM_ELEM\";\n\nexport const basketReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      \n    case ADD_COUNT:\n      return {\n        ...state,\n        basket: state.basket.map((elem) => {\n          if (elem.id == action.payload) {\n            elem.count = elem.count + 1;\n          }\n          return elem;\n        }),\n      };\n    case REM_COUNT:\n      let cart = state.basket.find((elem) => elem.id == action.payload);\n      if (cart.count == 1) {\n        return {\n          ...state,\n          basket: state.basket.filter((elem) => elem.id != action.payload),\n        };\n      } else {\n        return {\n          ...state,\n          basket: state.basket.map((elem) => {\n            if (elem.id == action.payload) {\n              elem.count = elem.count - 1;\n            }\n            return elem;\n          }),\n        };\n      }  \n      case REM_ELEM:\n        return {...state, basket: state.basket.filter((elem) => elem.id != action.payload)}\n      \n\n    default:\n      return state;\n  }\n};\n\nexport const addProductAction = (payload) => ({ type: ADD_PRODUCT, payload });\nexport const addCountAction = (payload) => ({type: ADD_COUNT, payload}) \nexport const remCountAction = (payload) => ({type: REM_COUNT, payload}) \nexport const remElemAction = (payload) => ({type: REM_ELEM, payload})\n\n\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG;EACjBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,SAAS,GAAG,WAAW;AAC7B,MAAMC,SAAS,GAAG,WAAW;AAC7B,MAAMC,QAAQ,GAAG,UAAU;AAE3B,OAAO,MAAMC,aAAa,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,WAAW;IAEhB,KAAKC,SAAS;MACZ,OAAO;QACL,GAAGI,KAAK;QACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,CAACS,GAAG,CAAEC,IAAI,IAAK;UACjC,IAAIA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,EAAE;YAC7BF,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACG,KAAK,GAAG,CAAC;UAC7B;UACA,OAAOH,IAAI;QACb,CAAC;MACH,CAAC;IACH,KAAKP,SAAS;MACZ,IAAIW,IAAI,GAAGR,KAAK,CAACN,MAAM,CAACe,IAAI,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAAC;MACjE,IAAIE,IAAI,CAACD,KAAK,IAAI,CAAC,EAAE;QACnB,OAAO;UACL,GAAGP,KAAK;UACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,CAACgB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO;QACjE,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGN,KAAK;UACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,CAACS,GAAG,CAAEC,IAAI,IAAK;YACjC,IAAIA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,EAAE;cAC7BF,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACG,KAAK,GAAG,CAAC;YAC7B;YACA,OAAOH,IAAI;UACb,CAAC;QACH,CAAC;MACH;IACA,KAAKN,QAAQ;MACX,OAAO;QAAC,GAAGE,KAAK;QAAEN,MAAM,EAAEM,KAAK,CAACN,MAAM,CAACgB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO;MAAC,CAAC;IAGvF;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAIL,OAAO,KAAM;EAAEJ,IAAI,EAAEP,WAAW;EAAEW;AAAQ,CAAC,CAAC;AAC7E,OAAO,MAAMM,cAAc,GAAIN,OAAO,KAAM;EAACJ,IAAI,EAAEN,SAAS;EAAEU;AAAO,CAAC,CAAC;AACvE,OAAO,MAAMO,cAAc,GAAIP,OAAO,KAAM;EAACJ,IAAI,EAAEL,SAAS;EAAES;AAAO,CAAC,CAAC;AACvE,OAAO,MAAMQ,aAAa,GAAIR,OAAO,KAAM;EAACJ,IAAI,EAAEJ,QAAQ;EAAEQ;AAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}